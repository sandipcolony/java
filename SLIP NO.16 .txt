SLIP NO.16 
Q1. 
<?xml version="1.0" encoding="UTF-8"?> 
<library> 
  <book> 
    <title>Harry Potter and the Philosopher's Stone</title> 
    <author>J.K. Rowling</author> 
    <year>1997</year> 
    <price>10.99</price> 
  </book> 
  <book> 
    <title>The Hobbit</title> 
    <author>J.R.R. Tolkien</author> 
    <year>1937</year> 
    <price>8.99</price> 
  </book> 
  <book> 
    <title>To Kill a Mockingbird</title> 
    <author>Harper Lee</author> 
    <year>1960</year> 
    <price>12.99</price> 
  </book> 
</library> 
 
HTML 2 
<!DOCTYPE html> 
<html> 
<head> 
 <title>Book Details</title> 
 <script src="jquery.js"></script> 
 <script type="text/javascript"> 
  $(document).ready(function(){ 
   $('#bookSelect').change(function(){ 
    var selectedBook = $(this).val(); 
    $.ajax({ 

     type: "GET", 
     url: "books.xml", 
     dataType: "xml", 
    success: function(xml) 
                                                    { 
    $(xml).find('book').each(function() 
                                                       { 
    var title = $(this).find('title').text(); 
                  if(title === selectedBook) 
                                                                     { 
    var author = $(this).find('author').text(); 
    var year = $(this).find('year').text(); 
    var price = $(this).find('price').text(); 
    var details = "Author: " + author + "<br>Year: " + year + "<br>Price: $" + price; 
    $('#bookDetails').html(details); 
       } 
      }); 
     } 
    }); 
   }); 
  }); 
 </script> 
</head> 
<body> 
 <h1>Book Details</h1> 
 <select id="bookSelect"> 
  <option value="">--Select a Book--</option> 
  <option value="Harry Potter and the Philosopher's Stone">Harry Potter and the Philosopher's 
Stone</option> 
  <option value="The Hobbit">The Hobbit</option> 
  <option value="To Kill a Mockingbird">To Kill a Mockingbird</option> 
 </select> 
 <div id="bookDetails"></div> 
</body> 
</html> 
2.
 Importre
 Importnltk
 Fromnltk.corpusi
 Fromnltk.tokeni
 mportstopwords
 zeimportsent_tokeni
 ze,word_tokeni
 Fromheapqimportnlargest
 #Sampletextparagraphyoucanwriteanytext
 Text=“Naturallanguageprocessi
 ze
 ng(NLP)isasubfieldoflingui
 informati
 onengineering,andarti
 fici
 alintel
 ligenceconcernedwiththei
 computersandhumanlanguages,inparticul
 alcharactersand
 stics,computersci
 ence,
 nteracti
 onsbetween
 arhowtoprogramcomputerstoprocessand
 analyzelargeamountsofnaturall
 anguagedata.Challengesinnaturall
 anguageprocessing
 frequentl
 yinvolvespeechrecogni
 tion,naturall
 generati
 on.Thehistoryofnaturall
 anguageunderstanding,andnaturall
 anguageprocessinggenerall
 anguage
 ystartedinthe1950s,al
 though
 workcanbefoundfromearlierperiods.”
#Removespecialcharactersanddigits
 Text=re.sub(‘
 [^a-zA-Z]
 ’,‘‘
 ,text)
 #Tokenizethetextintosentences
 Sentences=sent_tokeni
 ze(text)
 #Tokenizeeachsentenceintowordsandremovestopwords
 Stop_words=set(stopwords.words(‘
 english’
 Words=[]
 Forsentenceinsentences:
 Words.extend(word_tokeni
 ze(sentence))
 ))
 Words=[word.lower()forwordinwordsifword.l
 ower()notinstop_words]
 #Calculatewordfrequency
 Word_freq=nltk.FreqDi
 st(words)
 #Calculatesentencescoresbasedonwordfrequency
 Sentence_scores={}
 Forsentenceinsentences:
 Forwordinword_tokenize(sentence.
 Ifwordinword_freq:
 Iflen(sentence.
 split(‘‘
 ))<30:
 lower()):
 Ifsentencenotinsentence_scores:
 Sentence_scores[sentence]=word_freq[
 Else:
 word]
 Sentence_scores[sentence]+=word_freq[
 word]
 #Generatesummarybyselectingtop3sentenceswithhighestscores
Summary_sentences=nlargest(3,sentence_scores,key=sentence_scores.
 get)
 Summary=‘‘.join(summary_sentences)
 Print(summary